{"version":3,"file":"static/js/418.3bb35259.chunk.js","mappings":"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","sources":["webgl/animation_skinning_morph/Example.tsx"],"sourcesContent":["import { AnimationClip, AnimationMixer, Group, LoopOnce } from \"three\"\nimport { Canvas, useFrame } from \"@react-three/fiber\"\nimport { useGLTF } from \"@react-three/drei\"\nimport { button, useControls } from 'leva'\n\nimport robot from '../../models/RobotExpressive.glb'\nuseGLTF.preload(robot)\n\nlet mixer: AnimationMixer, actions: any, activeAction: any, previousAction: any\nlet model: Group, animations: AnimationClip[], face: any\n\nconst fadeToAction = (name: string, duration: number) => {\n  previousAction = activeAction\n  activeAction = actions[name]\n\n  if (previousAction !== activeAction) {\n    previousAction.fadeOut(duration)\n  }\n\n  activeAction\n    .reset()\n    .setEffectiveTimeScale(1)\n    .setEffectiveWeight(1)\n    .fadeIn(duration)\n    .play()\n}\n\nconst Controls = () => {\n  const states = [\"Idle\", \"Walking\", \"Running\", \"Dance\", \"Death\", \"Sitting\", \"Standing\"]\n  const emotes = [\"Jump\", \"Yes\", \"No\", \"Wave\", \"Punch\", \"ThumbsUp\"]\n\n  actions = {}\n\n  for (let i = 0; i < animations.length; i++) {\n    const clip = animations[i]\n    const action = mixer.clipAction(clip)\n    actions[clip.name] = action\n\n    if (emotes.indexOf(clip.name) >= 0 || states.indexOf(clip.name) >= 4) {\n      action.clampWhenFinished = true\n      action.loop = LoopOnce\n    }\n  }\n\n  // states\n  useControls('States', {\n    'state': {\n      value: 'Walking',\n      options: states,\n      onChange: (value) => fadeToAction(value, 0.5)\n    }\n  })\n\n\n  // emotes\n  const emotesObj: any = {}\n  const createEmoteCallback = (name: string) => {\n    emotesObj[name] = button((get) => {\n      fadeToAction(name, 0.2)\n      mixer.addEventListener(\"finished\", () => restoreState(get('States.state')))\n    })\n  }\n\n  const restoreState = (state: string) => {\n    mixer.removeEventListener(\"finished\", () => restoreState(state))\n    fadeToAction(state, 0.2)\n  }\n\n  for (let i = 0; i < emotes.length; i++) {\n    createEmoteCallback(emotes[i])\n  }\n\n  useControls('Emotes', emotesObj)\n\n  // expressions\n  face = model.getObjectByName(\"Head_4\")\n\n  const expressions = Object.keys(face.morphTargetDictionary)\n  const expressionsObj: any = {}\n  for (let i = 0; i < expressions.length; i++) {\n    expressionsObj[expressions[i]] = {\n      value: face.morphTargetInfluences[i],\n      min: 0,\n      max: 1,\n      step: 0.01,\n      onChange: (value: number) => face.morphTargetInfluences[i] = value\n    }\n  }\n\n  useControls('Expressions', expressionsObj)\n\n  activeAction = actions[\"Walking\"]\n  activeAction.play()\n\n  return null\n}\n\nconst Model = () => {\n  const gltf: any = useGLTF(robot)\n  model = gltf.scene\n  mixer = new AnimationMixer(model)\n  animations = gltf.animations\n\n  useFrame((_, delta) => {\n    if (mixer) mixer.update(delta)\n  })\n\n  return (\n    <primitive object={model} />\n )\n}\n\nconst Ground = () => {\n  return (\n    <>\n      <mesh rotation={[-Math.PI/2, 0, 0]}>\n        <planeGeometry args={[2000, 2000]} />\n        <meshPhongMaterial color={0x999999} depthWrite={false} />\n      </mesh>\n      <mesh>\n        <gridHelper args={[200, 40, 0x000000, 0x000000]} \n          material-opacity={0.2} material-transparent={true} />\n      </mesh>\n    </>\n )\n}\n\nconst Example = () => {\n  return (\n    <Canvas \n      camera={{position: [-5, 3, 10], fov: 45, near: 0.25, far: 100}} \n      dpr={[1, 2]} \n      onCreated={({ camera }) => camera.lookAt(0, 2, 0)}\n    >\n      <color attach=\"background\" args={[0xe0e0e0]} />\n      <fog attach=\"fog\" color={0xe0e0e0} near={20} far={100} />\n      <hemisphereLight color={0xffffff} groundColor={0x444444} position={[0, 20, 0]} />\n      <directionalLight color={0xffffff} position={[0, 20, 10]} />\n      <Ground />\n      <Model />\n      <Controls />\n    </Canvas>\n )\n}\n\nexport default Example"],"names":["mixer","actions","activeAction","previousAction","model","animations","face","useGLTF","robot","fadeToAction","name","duration","fadeOut","reset","setEffectiveTimeScale","setEffectiveWeight","fadeIn","play","Controls","states","emotes","i","length","clip","action","clipAction","indexOf","clampWhenFinished","loop","LoopOnce","useControls","value","options","onChange","emotesObj","createEmoteCallback","button","get","addEventListener","restoreState","state","removeEventListener","getObjectByName","expressions","Object","keys","morphTargetDictionary","expressionsObj","morphTargetInfluences","min","max","step","Model","gltf","scene","AnimationMixer","useFrame","_","delta","update","object","Ground","rotation","Math","PI","args","color","depthWrite","camera","position","fov","near","far","dpr","onCreated","lookAt","attach","groundColor"],"sourceRoot":""}