{"version":3,"file":"static/js/767.cbc355ff.chunk.js","mappings":"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","sources":["contants.tsx","../node_modules/three/examples/jsm/effects/AnaglyphEffect.js","webgl/effects_anaglyph/Example.tsx"],"sourcesContent":["export const canvas_width = window.innerWidth > 640 ? (window.innerWidth - 300) : window.innerWidth\nexport const canvas_height = window.innerWidth > 640 ? window.innerHeight : (window.innerHeight - 48)\n\nexport const aspect_ratio = canvas_width / canvas_height","import {\n\tLinearFilter,\n\tMatrix3,\n\tMesh,\n\tNearestFilter,\n\tOrthographicCamera,\n\tPlaneGeometry,\n\tRGBAFormat,\n\tScene,\n\tShaderMaterial,\n\tStereoCamera,\n\tWebGLRenderTarget\n} from 'three';\n\nclass AnaglyphEffect {\n\n\tconstructor( renderer, width = 512, height = 512 ) {\n\n\t\t// Dubois matrices from https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.7.6968&rep=rep1&type=pdf#page=4\n\n\t\tthis.colorMatrixLeft = new Matrix3().fromArray( [\n\t\t\t0.456100, - 0.0400822, - 0.0152161,\n\t\t\t0.500484, - 0.0378246, - 0.0205971,\n\t\t\t0.176381, - 0.0157589, - 0.00546856\n\t\t] );\n\n\t\tthis.colorMatrixRight = new Matrix3().fromArray( [\n\t\t\t- 0.0434706, 0.378476, - 0.0721527,\n\t\t\t- 0.0879388, 0.73364, - 0.112961,\n\t\t\t- 0.00155529, - 0.0184503, 1.2264\n\t\t] );\n\n\t\tconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\tconst _scene = new Scene();\n\n\t\tconst _stereo = new StereoCamera();\n\n\t\tconst _params = { minFilter: LinearFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\tconst _renderTargetL = new WebGLRenderTarget( width, height, _params );\n\t\tconst _renderTargetR = new WebGLRenderTarget( width, height, _params );\n\n\t\tconst _material = new ShaderMaterial( {\n\n\t\t\tuniforms: {\n\n\t\t\t\t'mapLeft': { value: _renderTargetL.texture },\n\t\t\t\t'mapRight': { value: _renderTargetR.texture },\n\n\t\t\t\t'colorMatrixLeft': { value: this.colorMatrixLeft },\n\t\t\t\t'colorMatrixRight': { value: this.colorMatrixRight }\n\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t'varying vec2 vUv;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvUv = vec2( uv.x, uv.y );',\n\t\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t'uniform sampler2D mapLeft;',\n\t\t\t\t'uniform sampler2D mapRight;',\n\t\t\t\t'varying vec2 vUv;',\n\n\t\t\t\t'uniform mat3 colorMatrixLeft;',\n\t\t\t\t'uniform mat3 colorMatrixRight;',\n\n\t\t\t\t// These functions implement sRGB linearization and gamma correction\n\n\t\t\t\t'float lin( float c ) {',\n\t\t\t\t'\treturn c <= 0.04045 ? c * 0.0773993808 :',\n\t\t\t\t'\t\t\tpow( c * 0.9478672986 + 0.0521327014, 2.4 );',\n\t\t\t\t'}',\n\n\t\t\t\t'vec4 lin( vec4 c ) {',\n\t\t\t\t'\treturn vec4( lin( c.r ), lin( c.g ), lin( c.b ), c.a );',\n\t\t\t\t'}',\n\n\t\t\t\t'float dev( float c ) {',\n\t\t\t\t'\treturn c <= 0.0031308 ? c * 12.92',\n\t\t\t\t'\t\t\t: pow( c, 0.41666 ) * 1.055 - 0.055;',\n\t\t\t\t'}',\n\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvec2 uv = vUv;',\n\n\t\t\t\t'\tvec4 colorL = lin( texture2D( mapLeft, uv ) );',\n\t\t\t\t'\tvec4 colorR = lin( texture2D( mapRight, uv ) );',\n\n\t\t\t\t'\tvec3 color = clamp(',\n\t\t\t\t'\t\t\tcolorMatrixLeft * colorL.rgb +',\n\t\t\t\t'\t\t\tcolorMatrixRight * colorR.rgb, 0., 1. );',\n\n\t\t\t\t'\tgl_FragColor = vec4(',\n\t\t\t\t'\t\t\tdev( color.r ), dev( color.g ), dev( color.b ),',\n\t\t\t\t'\t\t\tmax( colorL.a, colorR.a ) );',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' )\n\n\t\t} );\n\n\t\tconst _mesh = new Mesh( new PlaneGeometry( 2, 2 ), _material );\n\t\t_scene.add( _mesh );\n\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\trenderer.setSize( width, height );\n\n\t\t\tconst pixelRatio = renderer.getPixelRatio();\n\n\t\t\t_renderTargetL.setSize( width * pixelRatio, height * pixelRatio );\n\t\t\t_renderTargetR.setSize( width * pixelRatio, height * pixelRatio );\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tscene.updateMatrixWorld();\n\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t\t_stereo.update( camera );\n\n\t\t\trenderer.setRenderTarget( _renderTargetL );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, _stereo.cameraL );\n\n\t\t\trenderer.setRenderTarget( _renderTargetR );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, _stereo.cameraR );\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.render( _scene, _camera );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\t_renderTargetL.dispose();\n\t\t\t_renderTargetR.dispose();\n\t\t\t_mesh.geometry.dispose();\n\t\t\t_mesh.material.dispose();\n\n\t\t};\n\n\t}\n\n}\n\nexport { AnaglyphEffect };\n","import { createRef, useMemo } from 'react'\nimport { CubeTextureLoader, PerspectiveCamera } from 'three'\nimport { AnaglyphEffect } from 'three/examples/jsm/effects/AnaglyphEffect.js'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { aspect_ratio, canvas_width, canvas_height } from '../../contants'\n\nimport px from '../../textures/cube/pisa/px.png'\nimport py from '../../textures/cube/pisa/py.png'\nimport pz from '../../textures/cube/pisa/pz.png'\nimport nx from '../../textures/cube/pisa/nx.png'\nimport ny from '../../textures/cube/pisa/ny.png'\nimport nz from '../../textures/cube/pisa/nz.png'\n\nlet mouseX = 0\nlet mouseY = 0\n\nconst urls = [px, nx, py, ny, pz, nz]\nconst textureCube = new CubeTextureLoader().load(urls)\n\nconst onDocumentMouseMove = (event: any) => {\n  mouseX = (event.clientX - canvas_width / 2) / 100\n  mouseY = (event.clientY - canvas_height / 2) / 100\n}\ndocument.addEventListener('mousemove', onDocumentMouseMove)\n\nconst Meshes = () => { \n  const { gl, scene, camera } = useThree()\n  const effect = new AnaglyphEffect(gl)\n  effect.setSize(canvas_width || 2, canvas_height || 2)\n  \n  const spheres = useMemo(() => {\n    const refs = []\n    for (let i=0; i<500; i++) {\n      refs.push(createRef())\n    }\n    return refs as any\n  }, [])\n\n  const meshes: any[] = []\n  for (let i=0; i<500; i++) {\n    meshes.push(\n      <mesh key={i} scale={Math.random()*3+1} ref={spheres[i]}\n        position={[Math.random()*10-5, Math.random()*10-5, Math.random()*10-5]}>\n        <sphereGeometry args={[0.1, 32, 16]} />\n        <meshBasicMaterial color={0xffffff} envMap={textureCube} />\n      </mesh>\n    )\n  }\n\n  useFrame(() => {\n    const timer = 0.0001 * Date.now()\n\n    camera.position.x += (mouseX - camera.position.x) * .05\n\t\tcamera.position.y += (-mouseY - camera.position.y) * .05\n\n\t\tcamera.lookAt(scene.position)\n\n    for (let i=0, il=spheres.length; i<il; i++) {\n      const sphere = spheres[i].current\n      sphere.position.x = 5 * Math.cos(timer+i)\n      sphere.position.y = 5 * Math.sin(timer+i*1.1)\n    }\n    effect.render(scene, camera)\n  })\n  \n  return (\n    <>\n      {meshes.map(m => m)}\n    </>\n  )\n}\n\nconst Example = () => {\n  const camera = new PerspectiveCamera(60, aspect_ratio, 0.01, 100)\n  camera.position.z = 3\n  camera.setFocalLength(3)\n\n  return (\n    <Canvas>\n      <primitive attach='camera' object={camera} makeDefault />\n      <primitive attach='background' object={textureCube} />\n      <Meshes />\n    </Canvas>\n  )\n}\n\nexport default Example"],"names":["canvas_width","window","innerWidth","canvas_height","innerHeight","aspect_ratio","AnaglyphEffect","renderer","width","height","this","colorMatrixLeft","Matrix3","fromArray","colorMatrixRight","_camera","OrthographicCamera","_scene","Scene","_stereo","StereoCamera","_params","minFilter","LinearFilter","magFilter","NearestFilter","format","RGBAFormat","_renderTargetL","WebGLRenderTarget","_renderTargetR","_material","ShaderMaterial","uniforms","value","texture","vertexShader","join","fragmentShader","_mesh","Mesh","PlaneGeometry","add","setSize","pixelRatio","getPixelRatio","render","scene","camera","currentRenderTarget","getRenderTarget","updateMatrixWorld","parent","update","setRenderTarget","clear","cameraL","cameraR","dispose","geometry","material","mouseX","mouseY","urls","px","nx","py","ny","pz","nz","textureCube","CubeTextureLoader","load","document","addEventListener","event","clientX","clientY","Meshes","useThree","gl","effect","spheres","useMemo","refs","i","push","createRef","meshes","scale","Math","random","ref","position","args","color","envMap","useFrame","timer","Date","now","x","y","lookAt","il","length","sphere","current","cos","sin","map","m","PerspectiveCamera","z","setFocalLength","attach","object","makeDefault"],"sourceRoot":""}