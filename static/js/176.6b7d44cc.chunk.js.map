{"version":3,"file":"static/js/176.6b7d44cc.chunk.js","mappings":"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","sources":["contants.tsx","webgl/camera/Example.tsx","../node_modules/@react-three/drei/core/useHelper.js"],"sourcesContent":["export const canvas_width = window.innerWidth > 640 ? (window.innerWidth - 300) : window.innerWidth\nexport const canvas_height = window.innerWidth > 640 ? window.innerHeight : (window.innerHeight - 48)\n\nexport const aspect_ratio = canvas_width / canvas_height","import { useRef } from \"react\"\nimport { CameraHelper, MathUtils } from \"three\"\nimport { Canvas, useFrame } from \"@react-three/fiber\"\nimport { useHelper } from \"@react-three/drei\"\n\nimport { aspect_ratio, canvas_height, canvas_width } from '../../contants'\n\nconst frustumSize = 600\nlet mesh: any, camera: any\nlet cameraPerspective: any, cameraOrtho: any\nlet cameraPerspectiveHelper: any, cameraOrthoHelper: any\nlet activeCamera: any, activeHelper: any, cameraRig: any\n\nconst onKeyDown = (event: any) => {\n  switch (event.key) {\n    case \"o\":\n    case \"O\":\n      activeCamera = cameraOrtho\n      activeHelper = cameraOrthoHelper\n      break\n\n    case \"p\":\n    case \"P\":\n      activeCamera = cameraPerspective\n      activeHelper = cameraPerspectiveHelper\n      break\n  }\n}\ndocument.addEventListener( 'keydown', onKeyDown )\n\nconst Camera = () => {\n  camera = useRef()\n\n  return (\n    <perspectiveCamera ref={camera}\n      position={[0, 0, 2500]} fov={50} aspect={0.5*aspect_ratio} near={1} far={10000}\n    />\n  )\n}\n\nconst Particles = () => {\n  const vertices = []\n  for (let i = 0; i < 10000; i++ ) {\n    vertices.push(MathUtils.randFloatSpread(2000)) // x\n    vertices.push(MathUtils.randFloatSpread(2000)) // y\n    vertices.push(MathUtils.randFloatSpread(2000)) // z\n  }\n  return (\n    <points>\n      <bufferGeometry attach=\"geometry\">\n        <bufferAttribute attach=\"attributes-position\" args={[new Float32Array(vertices), 3]} />\n      </bufferGeometry>   \n      <pointsMaterial color={0x888888} />\n    </points>\n  )\n}\n\nconst Mesh = () => {\n  mesh = useRef()\n  \n  return (\n    <mesh ref={mesh}>\n      <sphereGeometry args={[100, 16, 8]} />\n      <meshBasicMaterial color={0xffffff} wireframe={true} />\n      <mesh position={[0, 150, 0]}>\n        <sphereGeometry args={[50, 16, 8]} />\n        <meshBasicMaterial color={0x00ff00} wireframe={true} />\n      </mesh>\n    </mesh>\n  )\n}\n\nconst CameraRig = () => {\n  cameraRig = useRef()\n  cameraPerspective = useRef()\n  cameraOrtho = useRef()\n  activeCamera = cameraPerspective\n\n  return (\n    <group ref={cameraRig}>\n      <perspectiveCamera ref={cameraPerspective} rotation={[0, Math.PI, 0]} args={[50, 0.5*aspect_ratio, 150, 1000]} />\n      <orthographicCamera ref={cameraOrtho} rotation={[0, Math.PI, 0]} \n        args={[-0.5*frustumSize*aspect_ratio/2, 0.5*frustumSize*aspect_ratio/2, frustumSize/2, -frustumSize/2, 150, 1000]} />\n      <mesh>\n        <sphereGeometry args={[5, 16, 8]} />\n        <meshBasicMaterial color='#0000ff' wireframe />\n      </mesh>\n    </group>\n  )\n}\n\nconst CameraHelpers = () => {\n  cameraPerspectiveHelper = useHelper(cameraPerspective, CameraHelper)\n  cameraOrthoHelper = useHelper(cameraOrtho, CameraHelper)\n  activeHelper = cameraPerspectiveHelper\n\n  return null\n}\n\nconst Animation = () => {\n  return useFrame(({ gl, scene, set }) => {\n    const r = Date.now() * 0.0005\n\n    mesh.current.position.set(700*Math.cos(r), 700*Math.sin(r), 700*Math.sin(r))\n    mesh.current.children[0].position.set(70*Math.cos(2*r), 0, 70*Math.sin(r))\n\n    if (activeCamera === cameraPerspective) {\n      cameraPerspective.current.fov = 35 + 30 * Math.sin(0.5*r)\n      cameraPerspective.current.far = mesh.current.position.length()\n      cameraPerspective.current.updateProjectionMatrix()\n\n      cameraPerspectiveHelper.current.update()\n      cameraPerspectiveHelper.current.visible = true\n\n      cameraOrthoHelper.current.visible = false\n\n    } else {\n      cameraOrtho.current.far = mesh.current.position.length()\n      cameraOrtho.current.updateProjectionMatrix()\n\n      cameraOrthoHelper.current.update()\n      cameraOrthoHelper.current.visible = true\n\n      cameraPerspectiveHelper.current.visible = false\n    }\n\n    cameraRig.current.lookAt(mesh.current.position)\n\n    gl.clear();    \n\n    activeHelper.current.visible = false \n    gl.setViewport(0, 0, canvas_width / 2, canvas_height)\n    set({camera: activeCamera.current})\n    gl.render(scene, activeCamera.current)\n\n    activeHelper.current.visible = true\n    gl.setViewport(canvas_width / 2, 0, canvas_width / 2, canvas_height)\n    set({camera: camera.current})\n    gl.render(scene, camera.current)\n  })\n}\n\nconst Example = () => {\n  return (\n    <Canvas gl={{ antialias: true, pixelRatio: aspect_ratio , autoClear: false}} camera={{manual: true}}>\n      <color attach=\"background\" args={[\"black\"]} />\n      <Mesh />\n      <Camera />\n      <CameraRig />\n      <CameraHelpers />\n      <Particles />\n      <Animation />\n    </Canvas>\n  )\n}\n\nexport default Example","import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useHelper(object3D, helperConstructor, ...args) {\n  const helper = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useEffect(() => {\n    if (object3D) {\n      if (helperConstructor && object3D != null && object3D.current) {\n        helper.current = new helperConstructor(object3D.current, ...args);\n\n        if (helper.current) {\n          scene.add(helper.current);\n        }\n      }\n    }\n    /**\n     * Dispose of the helper if no object 3D is passed\n     */\n\n\n    if (!object3D && helper.current) {\n      scene.remove(helper.current);\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, helperConstructor, object3D, args]);\n  useFrame(() => {\n    var _helper$current;\n\n    if ((_helper$current = helper.current) != null && _helper$current.update) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };\n"],"names":["canvas_width","window","innerWidth","canvas_height","innerHeight","aspect_ratio","mesh","camera","cameraPerspective","cameraOrtho","cameraPerspectiveHelper","cameraOrthoHelper","activeCamera","activeHelper","cameraRig","document","addEventListener","event","key","Camera","useRef","ref","position","fov","aspect","near","far","Particles","vertices","i","push","MathUtils","attach","args","Float32Array","color","Mesh","wireframe","CameraRig","rotation","Math","PI","frustumSize","CameraHelpers","useHelper","CameraHelper","Animation","useFrame","gl","scene","set","r","Date","now","current","cos","sin","children","length","updateProjectionMatrix","update","visible","lookAt","clear","setViewport","render","antialias","pixelRatio","autoClear","manual","object3D","helperConstructor","helper","React","useThree","state","add","remove","_helper$current"],"sourceRoot":""}