{"version":3,"file":"static/js/861.bef422c2.chunk.js","mappings":"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","sources":["contants.tsx","webgl/clipping_stencil/Example.tsx"],"sourcesContent":["export const canvas_width = window.innerWidth > 640 ? (window.innerWidth - 300) : window.innerWidth\nexport const canvas_height = window.innerWidth > 640 ? window.innerHeight : (window.innerHeight - 48)\n\nexport const aspect_ratio = canvas_width / canvas_height","import { AlwaysStencilFunc, BackSide, DecrementWrapStencilOp, DoubleSide, FrontSide, \n  Group, IncrementWrapStencilOp, Mesh, MeshBasicMaterial, MeshStandardMaterial, \n  NotEqualStencilFunc, Plane, PlaneGeometry, PlaneHelper, ReplaceStencilOp, \n  TorusKnotGeometry, Vector3 } from 'three'\n\nimport { GUI } from \"three/examples/jsm/libs/lil-gui.module.min\"\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nimport { aspect_ratio } from '../../contants'\nimport { OrbitControls } from '@react-three/drei'\n\nconst planes = [\n  new Plane(new Vector3(- 1, 0, 0), 0),\n  new Plane(new Vector3(0, - 1, 0), 0),\n  new Plane(new Vector3(0, 0, - 1), 0)\n]\n\nconst params = {\n  animate: true,\n  planeX: {\n    constant: 0,\n    negated: false,\n    displayHelper: false\n  },\n  planeY: {\n    constant: 0,\n    negated: false,\n    displayHelper: false\n  },\n  planeZ: {\n    constant: 0,\n    negated: false,\n    displayHelper: false\n  }\n}\n\nconst planeHelpers = planes.map(p => new PlaneHelper(p, 2, 0xffffff))\n\nconst planeObjects: any[] = []\nconst planeGeom = new PlaneGeometry(4, 4)\n\nconst geometry = new TorusKnotGeometry(0.4, 0.15, 220, 60)\nconst object = new Group()\n\nfunction createPlaneStencilGroup(geometry: TorusKnotGeometry, plane: Plane, renderOrder: number) {\n  const group = new Group()\n  const baseMat = new MeshBasicMaterial()\n  baseMat.depthWrite = false\n  baseMat.depthTest = false\n  baseMat.colorWrite = false\n  baseMat.stencilWrite = true\n  baseMat.stencilFunc = AlwaysStencilFunc\n\n  // back faces\n  const mat0 = baseMat.clone()\n  mat0.side = BackSide\n  mat0.clippingPlanes = [plane]\n  mat0.stencilFail = IncrementWrapStencilOp\n  mat0.stencilZFail = IncrementWrapStencilOp\n  mat0.stencilZPass = IncrementWrapStencilOp\n\n  const mesh0 = new Mesh(geometry, mat0)\n  mesh0.renderOrder = renderOrder\n  group.add(mesh0)\n\n  // front faces\n  const mat1 = baseMat.clone()\n  mat1.side = FrontSide\n  mat1.clippingPlanes = [plane]\n  mat1.stencilFail = DecrementWrapStencilOp\n  mat1.stencilZFail = DecrementWrapStencilOp\n  mat1.stencilZPass = DecrementWrapStencilOp\n\n  const mesh1 = new Mesh(geometry, mat1)\n  mesh1.renderOrder = renderOrder\n\n  group.add(mesh1)\n\n  return group\n}\n\nconst Meshes = () => {\n  const poGroups = []\n  for (let i=0; i<3; i++) {\n    const poGroup = new Group()\n    const plane = planes[i]\n    const stencilGroup = createPlaneStencilGroup(geometry, plane, i + 1)\n\n    // plane is clipped by the other clipping planes\n    const planeMat =\n      new MeshStandardMaterial({\n\n        color: 0xE91E63,\n        metalness: 0.1,\n        roughness: 0.75,\n        clippingPlanes: planes.filter(p => p !== plane),\n\n        stencilWrite: true,\n        stencilRef: 0,\n        stencilFunc: NotEqualStencilFunc,\n        stencilFail: ReplaceStencilOp,\n        stencilZFail: ReplaceStencilOp,\n        stencilZPass: ReplaceStencilOp,\n\n      })\n    const po = new Mesh(planeGeom, planeMat)\n    po.onAfterRender = (renderer) => {\n      renderer.clearStencil()\n    }\n\n    po.renderOrder = i + 11\n\n    object.add(stencilGroup)\n    poGroup.add(po)\n    planeObjects.push(po)\n    poGroups.push(\n      <primitive key={i} object={poGroup} />\n    )\n    // scene.add(poGroup)\n  }\n\n  const material = new MeshStandardMaterial({\n    color: 0xFFC107,\n    metalness: 0.1,\n    roughness: 0.75,\n    clippingPlanes: planes,\n    clipShadows: true,\n    shadowSide: DoubleSide,\n  })\n\n  // add the color\n  const clippedColorFront = new Mesh(geometry, material)\n  clippedColorFront.castShadow = true\n  clippedColorFront.renderOrder = 6\n  object.add(clippedColorFront)\n\n  useFrame((_, delta) => {\n    if (params.animate) {\n      object.rotation.x += delta * 0.5\n      object.rotation.y += delta * 0.2\n    }\n\n    for (let i = 0; i < planeObjects.length; i++) {\n      const plane = planes[i]\n      const po = planeObjects[i]\n      plane.coplanarPoint(po.position)\n      po.lookAt(\n        po.position.x - plane.normal.x,\n        po.position.y - plane.normal.y,\n        po.position.z - plane.normal.z,\n      )\n    }\n  })\n\n  return (\n    <>\n      <primitive object={object} />\n      {poGroups}\n    </>\n  )\n}\n\nconst Ground = () => {\n  return (\n    <mesh rotation={[-Math.PI/2, 0, 0]} position={[0, -1, 0]} receiveShadow >\n      <planeGeometry args={[9, 9, 1, 1]} />\n      <shadowMaterial color={0x000000} opacity={0.25} side={DoubleSide} />\n    </mesh>\n  )\n}\n\nconst createControls = () => {\n  const gui = new GUI()\n  gui.add(params, 'animate' )\n\n  const planeX = gui.addFolder('planeX')\n  planeX.add(params.planeX, 'displayHelper').onChange((v:any) => planeHelpers[0].visible = v)\n  planeX.add(params.planeX, 'constant').min(- 1).max(1).onChange((d:any) => planes[0].constant = d)\n  planeX.add(params.planeX, 'negated').onChange(() => {\n\n    planes[0].negate()\n    params.planeX.constant = planes[0].constant\n\n  })\n  planeX.open()\n\n  const planeY = gui.addFolder('planeY')\n  planeY.add(params.planeY, 'displayHelper').onChange((v:any) => planeHelpers[1].visible = v)\n  planeY.add(params.planeY, 'constant').min(- 1).max(1).onChange((d:any) => planes[1].constant = d)\n  planeY.add(params.planeY, 'negated').onChange(() => {\n\n    planes[1].negate()\n    params.planeY.constant = planes[1].constant\n\n  })\n  planeY.open()\n\n  const planeZ = gui.addFolder('planeZ')\n  planeZ.add(params.planeZ, 'displayHelper').onChange((v:any) => planeHelpers[2].visible = v)\n  planeZ.add(params.planeZ, 'constant').min(- 1).max(1).onChange((d:any) => planes[2].constant = d)\n  planeZ.add(params.planeZ, 'negated').onChange(() => {\n\n    planes[2].negate()\n    params.planeZ.constant = planes[2].constant\n\n  })\n  planeZ.open()\n}\n\nconst Example = () => {\n  return (\n    <Canvas camera={{position: [2, 2, 2], fov: 36, aspect: aspect_ratio, near: 1, far: 100}} shadows\n      onCreated={({gl}) => {\n        gl.setClearColor(0x263238)\n        gl.localClippingEnabled = true\n        createControls()\n      }}>\n      <ambientLight args={[0xffffff, 0.5]} />\n      <directionalLight args={[0xffffff, 1]} position={[5, 10, 7.5]} castShadow\n        shadow-camera-right={2} shadow-camera-left={-2}\n        shadow-camera-top={2} shadow-camera-bottom={-2}\n        shadow-mapSize-width={1024} shadow-camera-height={1024}\n      />\n      <> \n        {planeHelpers.map(ph => {\n          ph.visible = false\n          return <primitive key={ph.uuid} object={ph} />\n        })}\n      </>\n      <Meshes />\n      <Ground />\n      <OrbitControls \n        minDistance={2}\n        maxDistance={20}\n      />\n    </Canvas>\n  )\n}\n\nexport default Example"],"names":["canvas_width","window","innerWidth","canvas_height","innerHeight","aspect_ratio","planes","Plane","Vector3","params","animate","planeX","constant","negated","displayHelper","planeY","planeZ","planeHelpers","map","p","PlaneHelper","planeObjects","planeGeom","PlaneGeometry","geometry","TorusKnotGeometry","object","Group","Meshes","poGroups","i","poGroup","plane","stencilGroup","renderOrder","group","baseMat","MeshBasicMaterial","depthWrite","depthTest","colorWrite","stencilWrite","stencilFunc","AlwaysStencilFunc","mat0","clone","side","BackSide","clippingPlanes","stencilFail","IncrementWrapStencilOp","stencilZFail","stencilZPass","mesh0","Mesh","add","mat1","FrontSide","DecrementWrapStencilOp","mesh1","createPlaneStencilGroup","planeMat","MeshStandardMaterial","color","metalness","roughness","filter","stencilRef","NotEqualStencilFunc","ReplaceStencilOp","po","onAfterRender","renderer","clearStencil","push","material","clipShadows","shadowSide","DoubleSide","clippedColorFront","castShadow","useFrame","_","delta","rotation","x","y","length","coplanarPoint","position","lookAt","normal","z","Ground","Math","PI","receiveShadow","args","opacity","camera","fov","aspect","near","far","shadows","onCreated","gl","setClearColor","localClippingEnabled","gui","GUI","addFolder","onChange","v","visible","min","max","d","negate","open","createControls","ph","uuid","minDistance","maxDistance"],"sourceRoot":""}