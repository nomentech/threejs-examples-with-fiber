{"version":3,"file":"static/js/605.5d96858d.chunk.js","mappings":"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","sources":["contants.tsx","../node_modules/three/examples/jsm/curves/CurveExtras.js","webgl/geometry_extrude_splines/Example.tsx","../node_modules/@react-three/drei/core/PerspectiveCamera.js","../node_modules/@react-three/drei/core/useHelper.js"],"sourcesContent":["export const canvas_width = window.innerWidth > 640 ? (window.innerWidth - 300) : window.innerWidth\nexport const canvas_height = window.innerWidth > 640 ? window.innerHeight : (window.innerHeight - 48)\n\nexport const aspect_ratio = canvas_width / canvas_height","import {\n\tCurve,\n\tVector3\n} from 'three';\n\n/**\n * A bunch of parametric curves\n *\n * Formulas collected from various sources\n * http://mathworld.wolfram.com/HeartCurve.html\n * http://en.wikipedia.org/wiki/Viviani%27s_curve\n * http://www.mi.sanu.ac.rs/vismath/taylorapril2011/Taylor.pdf\n * https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\n// GrannyKnot\n\nclass GrannyKnot extends Curve {\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt = 2 * Math.PI * t;\n\n\t\tconst x = - 0.22 * Math.cos( t ) - 1.28 * Math.sin( t ) - 0.44 * Math.cos( 3 * t ) - 0.78 * Math.sin( 3 * t );\n\t\tconst y = - 0.1 * Math.cos( 2 * t ) - 0.27 * Math.sin( 2 * t ) + 0.38 * Math.cos( 4 * t ) + 0.46 * Math.sin( 4 * t );\n\t\tconst z = 0.7 * Math.cos( 3 * t ) - 0.4 * Math.sin( 3 * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( 20 );\n\n\t}\n\n}\n\n// HeartCurve\n\nclass HeartCurve extends Curve {\n\n\tconstructor( scale = 5 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt *= 2 * Math.PI;\n\n\t\tconst x = 16 * Math.pow( Math.sin( t ), 3 );\n\t\tconst y = 13 * Math.cos( t ) - 5 * Math.cos( 2 * t ) - 2 * Math.cos( 3 * t ) - Math.cos( 4 * t );\n\t\tconst z = 0;\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// Viviani's Curve\n\nclass VivianiCurve extends Curve {\n\n\tconstructor( scale = 70 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt = t * 4 * Math.PI; // normalized to 0..1\n\t\tconst a = this.scale / 2;\n\n\t\tconst x = a * ( 1 + Math.cos( t ) );\n\t\tconst y = a * Math.sin( t );\n\t\tconst z = 2 * a * Math.sin( t / 2 );\n\n\t\treturn point.set( x, y, z );\n\n\t}\n\n}\n\n// KnotCurve\n\nclass KnotCurve extends Curve {\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt *= 2 * Math.PI;\n\n\t\tconst R = 10;\n\t\tconst s = 50;\n\n\t\tconst x = s * Math.sin( t );\n\t\tconst y = Math.cos( t ) * ( R + s * Math.cos( t ) );\n\t\tconst z = Math.sin( t ) * ( R + s * Math.cos( t ) );\n\n\t\treturn point.set( x, y, z );\n\n\t}\n\n}\n\n\n// HelixCurve\n\nclass HelixCurve extends Curve {\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst a = 30; // radius\n\t\tconst b = 150; // height\n\n\t\tconst t2 = 2 * Math.PI * t * b / 30;\n\n\t\tconst x = Math.cos( t2 ) * a;\n\t\tconst y = Math.sin( t2 ) * a;\n\t\tconst z = b * t;\n\n\t\treturn point.set( x, y, z );\n\n\t}\n\n}\n\n// TrefoilKnot\n\nclass TrefoilKnot extends Curve {\n\n\tconstructor( scale = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt *= Math.PI * 2;\n\n\t\tconst x = ( 2 + Math.cos( 3 * t ) ) * Math.cos( 2 * t );\n\t\tconst y = ( 2 + Math.cos( 3 * t ) ) * Math.sin( 2 * t );\n\t\tconst z = Math.sin( 3 * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// TorusKnot\n\nclass TorusKnot extends Curve {\n\n\tconstructor( scale = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst p = 3;\n\t\tconst q = 4;\n\n\t\tt *= Math.PI * 2;\n\n\t\tconst x = ( 2 + Math.cos( q * t ) ) * Math.cos( p * t );\n\t\tconst y = ( 2 + Math.cos( q * t ) ) * Math.sin( p * t );\n\t\tconst z = Math.sin( q * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// CinquefoilKnot\n\nclass CinquefoilKnot extends Curve {\n\n\tconstructor( scale = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst p = 2;\n\t\tconst q = 5;\n\n\t\tt *= Math.PI * 2;\n\n\t\tconst x = ( 2 + Math.cos( q * t ) ) * Math.cos( p * t );\n\t\tconst y = ( 2 + Math.cos( q * t ) ) * Math.sin( p * t );\n\t\tconst z = Math.sin( q * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n\n// TrefoilPolynomialKnot\n\nclass TrefoilPolynomialKnot extends Curve {\n\n\tconstructor( scale = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt = t * 4 - 2;\n\n\t\tconst x = Math.pow( t, 3 ) - 3 * t;\n\t\tconst y = Math.pow( t, 4 ) - 4 * t * t;\n\t\tconst z = 1 / 5 * Math.pow( t, 5 ) - 2 * t;\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\nfunction scaleTo( x, y, t ) {\n\n\tconst r = y - x;\n\treturn t * r + x;\n\n}\n\n// FigureEightPolynomialKnot\n\nclass FigureEightPolynomialKnot extends Curve {\n\n\tconstructor( scale = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt = scaleTo( - 4, 4, t );\n\n\t\tconst x = 2 / 5 * t * ( t * t - 7 ) * ( t * t - 10 );\n\t\tconst y = Math.pow( t, 4 ) - 13 * t * t;\n\t\tconst z = 1 / 10 * t * ( t * t - 4 ) * ( t * t - 9 ) * ( t * t - 12 );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// DecoratedTorusKnot4a\n\nclass DecoratedTorusKnot4a extends Curve {\n\n\tconstructor( scale = 40 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt *= Math.PI * 2;\n\n\t\tconst x = Math.cos( 2 * t ) * ( 1 + 0.6 * ( Math.cos( 5 * t ) + 0.75 * Math.cos( 10 * t ) ) );\n\t\tconst y = Math.sin( 2 * t ) * ( 1 + 0.6 * ( Math.cos( 5 * t ) + 0.75 * Math.cos( 10 * t ) ) );\n\t\tconst z = 0.35 * Math.sin( 5 * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// DecoratedTorusKnot4b\n\nclass DecoratedTorusKnot4b extends Curve {\n\n\tconstructor( scale = 40 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst fi = t * Math.PI * 2;\n\n\t\tconst x = Math.cos( 2 * fi ) * ( 1 + 0.45 * Math.cos( 3 * fi ) + 0.4 * Math.cos( 9 * fi ) );\n\t\tconst y = Math.sin( 2 * fi ) * ( 1 + 0.45 * Math.cos( 3 * fi ) + 0.4 * Math.cos( 9 * fi ) );\n\t\tconst z = 0.2 * Math.sin( 9 * fi );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n\n// DecoratedTorusKnot5a\n\nclass DecoratedTorusKnot5a extends Curve {\n\n\tconstructor( scale = 40 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst fi = t * Math.PI * 2;\n\n\t\tconst x = Math.cos( 3 * fi ) * ( 1 + 0.3 * Math.cos( 5 * fi ) + 0.5 * Math.cos( 10 * fi ) );\n\t\tconst y = Math.sin( 3 * fi ) * ( 1 + 0.3 * Math.cos( 5 * fi ) + 0.5 * Math.cos( 10 * fi ) );\n\t\tconst z = 0.2 * Math.sin( 20 * fi );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// DecoratedTorusKnot5c\n\nclass DecoratedTorusKnot5c extends Curve {\n\n\tconstructor( scale = 40 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst fi = t * Math.PI * 2;\n\n\t\tconst x = Math.cos( 4 * fi ) * ( 1 + 0.5 * ( Math.cos( 5 * fi ) + 0.4 * Math.cos( 20 * fi ) ) );\n\t\tconst y = Math.sin( 4 * fi ) * ( 1 + 0.5 * ( Math.cos( 5 * fi ) + 0.4 * Math.cos( 20 * fi ) ) );\n\t\tconst z = 0.35 * Math.sin( 15 * fi );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\nexport {\n\tGrannyKnot,\n\tHeartCurve,\n\tVivianiCurve,\n\tKnotCurve,\n\tHelixCurve,\n\tTrefoilKnot,\n\tTorusKnot,\n\tCinquefoilKnot,\n\tTrefoilPolynomialKnot,\n\tFigureEightPolynomialKnot,\n\tDecoratedTorusKnot4a,\n\tDecoratedTorusKnot4b,\n\tDecoratedTorusKnot5a,\n\tDecoratedTorusKnot5c\n};\n","import { useMemo, useRef } from 'react'\nimport * as THREE from 'three'\nimport * as Curves from 'three/examples/jsm/curves/CurveExtras'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { OrbitControls, PerspectiveCamera, useHelper } from '@react-three/drei'\nimport { useControls } from 'leva'\n\nimport { aspect_ratio } from '../../contants'\nimport { CameraHelper } from 'three'\n\nconst pipeSpline = new THREE.CatmullRomCurve3([\n  new THREE.Vector3(0, 10, -10), new THREE.Vector3(10, 0, -10),\n  new THREE.Vector3(20, 0, 0), new THREE.Vector3(30, 0, 10),\n  new THREE.Vector3(30, 0, 20), new THREE.Vector3(20, 0, 30),\n  new THREE.Vector3(10, 0, 30), new THREE.Vector3(0, 0, 30),\n  new THREE.Vector3(-10, 10, 30), new THREE.Vector3(-10, 20, 30),\n  new THREE.Vector3(0, 30, 30), new THREE.Vector3(10, 30, 30),\n  new THREE.Vector3(20, 30, 15), new THREE.Vector3(10, 30, 10),\n  new THREE.Vector3(0, 30, 10), new THREE.Vector3(-10, 20, 10),\n  new THREE.Vector3(-10, 10, 10), new THREE.Vector3(0, 0, 10),\n  new THREE.Vector3(10, -10, 10), new THREE.Vector3(20, -15, 10),\n  new THREE.Vector3(30, -15, 10), new THREE.Vector3(40, -15, 10),\n  new THREE.Vector3(50, -15, 10), new THREE.Vector3(60, 0, 10),\n  new THREE.Vector3(70, 0, 0), new THREE.Vector3(80, 0, 0),\n  new THREE.Vector3(90, 0, 0), new THREE.Vector3(100, 0, 0)\n])\n\nconst sampleClosedSpline: any = new THREE.CatmullRomCurve3([\n  new THREE.Vector3(0, -40, -40),\n  new THREE.Vector3(0, 40, -40),\n  new THREE.Vector3(0, 140, -40),\n  new THREE.Vector3(0, 40, 40),\n  new THREE.Vector3(0, -40, 40)\n])\n\nsampleClosedSpline.curveType = 'catmullrom';\nsampleClosedSpline.closed = true\n\nconst splines: any = {\n  GrannyKnot: new Curves.GrannyKnot(),\n  HeartCurve: new Curves.HeartCurve(3.5),\n  VivianiCurve: new Curves.VivianiCurve(70),\n  KnotCurve: new Curves.KnotCurve(),\n  HelixCurve: new Curves.HelixCurve(),\n  TrefoilKnot: new Curves.TrefoilKnot(),\n  TorusKnot: new Curves.TorusKnot(20),\n  CinquefoilKnot: new Curves.CinquefoilKnot(20),\n  TrefoilPolynomialKnot: new Curves.TrefoilPolynomialKnot(14),\n  FigureEightPolynomialKnot: new Curves.FigureEightPolynomialKnot(),\n  DecoratedTorusKnot4a: new Curves.DecoratedTorusKnot4a(),\n  DecoratedTorusKnot4b: new Curves.DecoratedTorusKnot4b(),\n  DecoratedTorusKnot5a: new Curves.DecoratedTorusKnot5a(),\n  DecoratedTorusKnot5c: new Curves.DecoratedTorusKnot5c(),\n  PipeSpline: pipeSpline,\n  SampleClosedSpline: sampleClosedSpline\n}\n\nconst Mesh = () => {\n  const splineCamera: any = useRef()\n  const cameraEye: any = useRef()\n\n  const geoParams = useControls('Geometry', {\n    'spline': { value: 'GrannyKnot', options: Object.keys(splines) },\n    'scale': { value: 4, min: 2, max: 10, step: 2 },\n    'extrusionSegments': { value: 100, min: 50, max: 500, step: 50 },\n    'radiusSegments': { value: 3, min: 2, max: 12, step: 1 },\n    'closed': true\n  })\n\n  const camParams = useControls('Camera', {\n    'animationView': false,\n    'lookAhead': false,\n    'cameraHelper': false\n  })\n\n  const tubeGeometry = useMemo(() => \n    new THREE.TubeGeometry(splines[geoParams.spline], geoParams.extrusionSegments, 2, geoParams.radiusSegments, geoParams.closed)\n  , [geoParams])\n\n  useHelper(camParams.cameraHelper && splineCamera, CameraHelper)\n\n  useFrame(() => {\n    // animate camera along spline\n    const time = Date.now()\n    const looptime = 20 * 1000\n    const t = (time % looptime) / looptime\n\n    const position = new THREE.Vector3()\n    tubeGeometry.parameters.path.getPointAt(t, position)\n    position.multiplyScalar(geoParams.scale)\n\n    // interpolation\n    const segments = tubeGeometry.tangents.length\n    const pickt = t * segments\n    const pick = Math.floor(pickt)\n    const pickNext = (pick+1)%segments\n\n    const binormal = new THREE.Vector3()\n    binormal.subVectors(tubeGeometry.binormals[pickNext], tubeGeometry.binormals[pick])\n    binormal.multiplyScalar(pickt-pick).add(tubeGeometry.binormals[pick])\n\n    const direction = new THREE.Vector3()\n    tubeGeometry.parameters.path.getTangentAt(t, direction)\n    const offset = 15\n\n    const normal = new THREE.Vector3()\n    normal.copy(binormal).cross(direction)\n\n    // we move on a offset on its binormal\n    position.add(normal.clone().multiplyScalar(offset))\n\n    splineCamera.current.position.copy(position)\n    cameraEye.current.position.copy(position)\n\n    // using arclength for stablization in look ahead\n    const lookAt = new THREE.Vector3()\n    tubeGeometry.parameters.path.getPointAt((t+30/tubeGeometry.parameters.path.getLength())%1, lookAt)\n    lookAt.multiplyScalar(geoParams.scale)\n\n    // camera orientation 2 - up orientation via normal\n    if (!camParams.lookAhead) lookAt.copy(position).add(direction)\n    splineCamera.current.matrix.lookAt(splineCamera.current.position, lookAt, normal)\n    splineCamera.current.quaternion.setFromRotationMatrix(splineCamera.current.matrix)\n  })\n\n  return (\n    <>\n      <object3D>\n        <mesh scale={geoParams.scale} geometry={tubeGeometry} >\n          <meshLambertMaterial color='#ff00ff' />\n          <mesh geometry={tubeGeometry} >\n            <meshBasicMaterial color={0x000000} opacity={0.3} wireframe transparent />\n          </mesh>\n        </mesh>\n        <mesh ref={cameraEye} visible={camParams.cameraHelper}>\n          <sphereGeometry args={[5]} />\n          <meshBasicMaterial color={0xdddddd} />\n        </mesh>\n        <PerspectiveCamera ref={splineCamera} args={[84, aspect_ratio, 0.01, 1000]} makeDefault={camParams.animationView} />\n      </object3D>\n      <PerspectiveCamera args={[50, aspect_ratio, 0.01, 10000]} position={[0, 50, 500]} makeDefault={!camParams.animationView} />\n    </>\n  )\n}\n\nconst Example = () => {\n  return (\n    <Canvas gl={{ antialias: true }} dpr={devicePixelRatio} >\n      <color attach='background' args={[0xf0f0f0]} />\n      <ambientLight args={[0xcccccc, 0.2]} />\n      <directionalLight args={[0xffffff]} position={[0, 0, 1]} />\n      <Mesh />\n      <OrbitControls minDistance={100} maxDistance={2000} />\n    </Canvas>\n  )\n}\n\nexport default Example","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst PerspectiveCamera = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef();\n  React.useLayoutEffect(() => {\n    const {\n      current: cam\n    } = cameraRef;\n\n    if (cam && !props.manual) {\n      cam.aspect = size.width / size.height;\n      cam.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    if (makeDefault && cameraRef.current) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n  }, [camera, cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\n\nexport { PerspectiveCamera };\n","import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useHelper(object3D, helperConstructor, ...args) {\n  const helper = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useEffect(() => {\n    if (object3D) {\n      if (helperConstructor && object3D != null && object3D.current) {\n        helper.current = new helperConstructor(object3D.current, ...args);\n\n        if (helper.current) {\n          scene.add(helper.current);\n        }\n      }\n    }\n    /**\n     * Dispose of the helper if no object 3D is passed\n     */\n\n\n    if (!object3D && helper.current) {\n      scene.remove(helper.current);\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, helperConstructor, object3D, args]);\n  useFrame(() => {\n    var _helper$current;\n\n    if ((_helper$current = helper.current) != null && _helper$current.update) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };\n"],"names":["canvas_width","window","innerWidth","canvas_height","innerHeight","aspect_ratio","GrannyKnot","t","optionalTarget","Vector3","point","Math","PI","x","cos","sin","y","z","set","multiplyScalar","Curve","HeartCurve","scale","pow","this","VivianiCurve","a","KnotCurve","R","s","HelixCurve","b","t2","TrefoilKnot","TorusKnot","p","q","CinquefoilKnot","TrefoilPolynomialKnot","scaleTo","FigureEightPolynomialKnot","DecoratedTorusKnot4a","DecoratedTorusKnot4b","fi","DecoratedTorusKnot5a","DecoratedTorusKnot5c","pipeSpline","THREE","sampleClosedSpline","curveType","closed","splines","Curves","PipeSpline","SampleClosedSpline","Mesh","splineCamera","useRef","cameraEye","geoParams","useControls","value","options","Object","keys","min","max","step","camParams","tubeGeometry","useMemo","spline","extrusionSegments","radiusSegments","useHelper","cameraHelper","CameraHelper","useFrame","Date","now","position","parameters","path","getPointAt","segments","tangents","length","pickt","pick","floor","pickNext","binormal","subVectors","binormals","add","direction","getTangentAt","normal","copy","cross","clone","current","lookAt","getLength","lookAhead","matrix","quaternion","setFromRotationMatrix","geometry","color","opacity","wireframe","transparent","ref","visible","args","PerspectiveCamera","makeDefault","animationView","gl","antialias","dpr","devicePixelRatio","attach","OrbitControls","minDistance","maxDistance","React","props","useThree","camera","size","cameraRef","cam","manual","aspect","width","height","updateProjectionMatrix","oldCam","_extends","mergeRefs","object3D","helperConstructor","helper","scene","state","remove","_helper$current","update"],"sourceRoot":""}