{"version":3,"file":"static/js/815.c657ae1d.chunk.js","mappings":"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","sources":["contants.tsx","webgl/geometries/Example.tsx","../node_modules/@react-three/drei/core/PerspectiveCamera.js"],"sourcesContent":["export const canvas_width = window.innerWidth > 640 ? (window.innerWidth - 300) : window.innerWidth\nexport const canvas_height = window.innerWidth > 640 ? window.innerHeight : (window.innerHeight - 48)\n\nexport const aspect_ratio = canvas_width / canvas_height","import { useMemo } from 'react'\nimport * as THREE from 'three'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { PerspectiveCamera } from '@react-three/drei'\n\nimport { aspect_ratio } from '../../contants'\nimport texture from '../../textures/uv_grid_opengl.jpg'\n\nconst Meshes = () => {\n  const { material, points } = useMemo(() => {\n    const map = new THREE.TextureLoader().load(texture)\n    map.wrapS = map.wrapT = THREE.RepeatWrapping\n    map.anisotropy = 16\n\n    const material = new THREE.MeshPhongMaterial({ map: map, side: THREE.DoubleSide })\n    const points = []\n    for (let i = 0; i < 50; i++) {\n      points.push(new THREE.Vector2(Math.sin(i * 0.2) * Math.sin(i * 0.1) * 15 + 50, (i - 5) * 2))\n    }\n\n    return { material, points }\n  }, [])\n\n  return (\n    <>\n      <mesh material={material} position={[-300, 0, 200]}>\n        <sphereGeometry args={[75, 20, 10]} />\n      </mesh>\n      <mesh material={material} position={[-100, 0, 200]}>\n        <icosahedronGeometry args={[75, 1]} />\n      </mesh>\n      <mesh material={material} position={[100, 0, 200]}>\n        <octahedronGeometry args={[75, 2]} />\n      </mesh>\n      <mesh material={material} position={[300, 0, 200]}>\n        <tetrahedronGeometry args={[75, 0]} />\n      </mesh>\n      <mesh material={material} position={[-300, 0, 0]}>\n        <planeGeometry args={[100, 100, 4, 4]} />\n      </mesh>\n      <mesh material={material} position={[-100, 0, 0]}>\n        <boxGeometry args={[100, 100, 100, 4, 4, 4]} />\n      </mesh>\n      <mesh material={material} position={[100, 0, 0]}>\n        <circleGeometry args={[50, 20, 0, Math.PI*2]} />\n      </mesh>\n      <mesh material={material} position={[300, 0, 0]}>\n        <ringGeometry args={[10, 50, 20, 5, 0, Math.PI*2]} />\n      </mesh>\n      <mesh material={material} position={[-300, 0, -200]}>\n        <cylinderGeometry args={[25, 75, 100, 40, 5]} />\n      </mesh>\n      <mesh material={material} position={[-100, 0, -200]}>\n        <latheGeometry args={[points, 20]} />\n      </mesh>\n      <mesh material={material} position={[100, 0, -200]}>\n        <torusGeometry args={[50, 20, 20, 20]} />\n      </mesh>\n      <mesh material={material} position={[300, 0, -200]}>\n        <torusKnotGeometry args={[50, 10, 50, 20]} />\n      </mesh>\n    </>\n  )\n}\n\nconst Animate = () => {\n  return useFrame(({ scene, camera, clock }) => {\n    const timer = clock.getElapsedTime() * 0.1\n\n    camera.position.x = Math.cos(timer) * 800\n    camera.position.z = Math.sin(timer) * 800\n    camera.lookAt(scene.position)\n\n    scene.traverse((object: any) => {\n      if (object.isMesh) {\n        object.rotation.x = timer * 5\n        object.rotation.y = timer * 2.5\n      }\n    })\n  })\n}\n\nconst Example = () => {\n  return (\n    <Canvas gl={{ antialias: true }} dpr={devicePixelRatio}>\n      <PerspectiveCamera args={[45, aspect_ratio, 1, 2000]} position={[0, 400, 0]} makeDefault>\n        <pointLight args={[0xffffff, 0.8]} />\n      </PerspectiveCamera>\n      <color attach='background' args={[0x000000]} />\n      <ambientLight args={[0xcccccc, 0.4]} />\n      <Meshes />\n      <Animate />\n    </Canvas>\n  )\n}\n\nexport default Example","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst PerspectiveCamera = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef();\n  React.useLayoutEffect(() => {\n    const {\n      current: cam\n    } = cameraRef;\n\n    if (cam && !props.manual) {\n      cam.aspect = size.width / size.height;\n      cam.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    if (makeDefault && cameraRef.current) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n  }, [camera, cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\n\nexport { PerspectiveCamera };\n"],"names":["canvas_width","window","innerWidth","canvas_height","innerHeight","aspect_ratio","Meshes","useMemo","map","THREE","load","texture","wrapS","wrapT","anisotropy","material","side","points","i","push","Math","sin","position","args","PI","Animate","useFrame","scene","camera","timer","clock","getElapsedTime","x","cos","z","lookAt","traverse","object","isMesh","rotation","y","gl","antialias","dpr","devicePixelRatio","makeDefault","attach","PerspectiveCamera","React","ref","props","set","useThree","size","cameraRef","cam","current","manual","aspect","width","height","updateProjectionMatrix","oldCam","_extends","mergeRefs"],"sourceRoot":""}