{"version":3,"file":"static/js/609.459c92e0.chunk.js","mappings":"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","sources":["contants.tsx","webgl/camera_cinematic/Example.tsx","../node_modules/three/examples/jsm/shaders/BokehShader2.js","../node_modules/three/examples/jsm/cameras/CinematicCamera.js","../node_modules/@react-three/drei/core/useHelper.js"],"sourcesContent":["const canvas_width = window.innerWidth > 640 ? (window.innerWidth - 300) : window.innerWidth\nconst canvas_height = window.innerWidth > 640 ? window.innerHeight : (window.innerHeight - 48)\n\nexport const aspect_ratio = canvas_width / canvas_height","import { useEffect, useRef } from 'react'\nimport { CameraHelper, MathUtils } from 'three'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\n\nimport { CinematicCamera } from 'three/examples/jsm/cameras/CinematicCamera'\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min'\n\nimport { aspect_ratio } from '../../contants'\nimport { useHelper } from '@react-three/drei'\n\nlet camera: any\nlet theta = 0\nconst radius = 100\n\nconst Camera = () => {\n  const cameraObj = new CinematicCamera(60, aspect_ratio, 1, 1000)\n  cameraObj.setLens(5)\n  cameraObj.position.set(2, 1, 500)\n\n  camera = useRef()\n  const { set, scene, gl } = useThree()\n\n  useHelper(camera, CameraHelper)\n\n  useEffect(() => set({ camera: camera.current }), [])\n  useEffect(() => createControls(), [])\n\n  useFrame(() => {\n    theta += 0.1\n\n    camera.current.position.x = radius * Math.sin(MathUtils.degToRad(theta))\n    camera.current.position.y = radius * Math.sin(MathUtils.degToRad(theta))\n    camera.current.position.z = radius * Math.cos(MathUtils.degToRad(theta))\n    camera.current.lookAt(scene.position)\n    camera.current.updateMatrixWorld()\n\n    if (camera.current.postprocessing.enabled) {\n      camera.current.renderCinematic(scene, gl)\n    } else {\n      scene.overrideMaterial = null\n      gl.clear()\n      gl.render(scene, camera)\n    }\n  })\n\n  return (\n    <primitive object={cameraObj} ref={camera} />\n    // <perspectiveCamera position={[2, 1, 500]} ref={camera} />\n  )\n}\n\nconst Mesh = () => {\n  const count = 1500\n  return (\n    <>    \n      {[...Array(count)].map((_, i) => (\n        <mesh key={i} position={[Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400]}>\n          <boxGeometry args={[20, 20, 20]} />\n          <meshLambertMaterial color={Math.random() * 0xffffff} />\n        </mesh>\n      ))}\n    </>\n  )\n}\n\nconst createControls = () => {\n  const effectController: any = {\n    focalLength: 15,\n    // jsDepthCalculation: true,\n    // shaderFocus: false,\n    //\n    fstop: 2.8,\n    // maxblur: 1.0,\n    //\n    showFocus: false,\n    focalDepth: 3,\n    // manualdof: false,\n    // vignetting: false,\n    // depthblur: false,\n    //\n    // threshold: 0.5,\n    // gain: 2.0,\n    // bias: 0.5,\n    // fringe: 0.7,\n    //\n    // focalLength: 35,\n    // noise: true,\n    // pentagon: false,\n    //\n    // dithering: 0.0001\n  }\n\n  const matChanger = function () {\n    for (const e in effectController) {\n      if (e in camera.current.postprocessing.bokeh_uniforms) {\n        camera.current.postprocessing.bokeh_uniforms[e].value = effectController[e]\n      }\n    }\n\n    camera.current.postprocessing.bokeh_uniforms['znear'].value = camera.current.near\n    camera.current.postprocessing.bokeh_uniforms['zfar'].value = camera.current.far\n    camera.current.setLens(effectController.focalLength, camera.current.frameHeight, effectController.fstop, camera.current.coc)\n    effectController['focalDepth'] = camera.current.postprocessing.bokeh_uniforms['focalDepth'].value\n  }\n\n  const gui = new GUI()\n\n  gui.add(effectController, 'focalLength', 1, 135, 0.01).onChange(matChanger)\n  gui.add(effectController, 'fstop', 1.8, 22, 0.01).onChange(matChanger)\n  gui.add(effectController, 'focalDepth', 0.1, 100, 0.001).onChange(matChanger)\n  gui.add(effectController, 'showFocus', true).onChange(matChanger)\n\n  matChanger()\n}\n\nconst Example = () => {\n  return (\n    <Canvas camera={{manual: true}}>\n      <Camera />\n      <color attach='background' args={[0xf0f0f0]}/>\n      <ambientLight args={[0xffffff, 0.3]} />\n      <directionalLight position={[1, 1, 1]} args={[0xffffff, 0.35]} />\n      <Mesh />\n    </Canvas>\n  )\n}\n\nexport default Example","import {\n\tVector2\n} from 'three';\n\n/**\n * Depth-of-field shader with bokeh\n * ported from GLSL shader by Martins Upitis\n * http://blenderartists.org/forum/showthread.php?237488-GLSL-depth-of-field-with-bokeh-v2-4-(update)\n *\n * Requires #define RINGS and SAMPLES integers\n */\nconst BokehShader = {\n\n\tuniforms: {\n\n\t\t'textureWidth': { value: 1.0 },\n\t\t'textureHeight': { value: 1.0 },\n\n\t\t'focalDepth': { value: 1.0 },\n\t\t'focalLength': { value: 24.0 },\n\t\t'fstop': { value: 0.9 },\n\n\t\t'tColor': { value: null },\n\t\t'tDepth': { value: null },\n\n\t\t'maxblur': { value: 1.0 },\n\n\t\t'showFocus': { value: 0 },\n\t\t'manualdof': { value: 0 },\n\t\t'vignetting': { value: 0 },\n\t\t'depthblur': { value: 0 },\n\n\t\t'threshold': { value: 0.5 },\n\t\t'gain': { value: 2.0 },\n\t\t'bias': { value: 0.5 },\n\t\t'fringe': { value: 0.7 },\n\n\t\t'znear': { value: 0.1 },\n\t\t'zfar': { value: 100 },\n\n\t\t'noise': { value: 1 },\n\t\t'dithering': { value: 0.0001 },\n\t\t'pentagon': { value: 0 },\n\n\t\t'shaderFocus': { value: 1 },\n\t\t'focusCoords': { value: new Vector2() }\n\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\t#include <common>\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tColor;\n\t\tuniform sampler2D tDepth;\n\t\tuniform float textureWidth;\n\t\tuniform float textureHeight;\n\n\t\tuniform float focalDepth;  //focal distance value in meters, but you may use autofocus option below\n\t\tuniform float focalLength; //focal length in mm\n\t\tuniform float fstop; //f-stop value\n\t\tuniform bool showFocus; //show debug focus point and focal range (red = focal point, green = focal range)\n\n\t\t/*\n\t\tmake sure that these two values are the same for your camera, otherwise distances will be wrong.\n\t\t*/\n\n\t\tuniform float znear; // camera clipping start\n\t\tuniform float zfar; // camera clipping end\n\n\t\t//------------------------------------------\n\t\t//user variables\n\n\t\tconst int samples = SAMPLES; //samples on the first ring\n\t\tconst int rings = RINGS; //ring count\n\n\t\tconst int maxringsamples = rings * samples;\n\n\t\tuniform bool manualdof; // manual dof calculation\n\t\tfloat ndofstart = 1.0; // near dof blur start\n\t\tfloat ndofdist = 2.0; // near dof blur falloff distance\n\t\tfloat fdofstart = 1.0; // far dof blur start\n\t\tfloat fdofdist = 3.0; // far dof blur falloff distance\n\n\t\tfloat CoC = 0.03; //circle of confusion size in mm (35mm film = 0.03mm)\n\n\t\tuniform bool vignetting; // use optical lens vignetting\n\n\t\tfloat vignout = 1.3; // vignetting outer border\n\t\tfloat vignin = 0.0; // vignetting inner border\n\t\tfloat vignfade = 22.0; // f-stops till vignete fades\n\n\t\tuniform bool shaderFocus;\n\t\t// disable if you use external focalDepth value\n\n\t\tuniform vec2 focusCoords;\n\t\t// autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)\n\t\t// if center of screen use vec2(0.5, 0.5);\n\n\t\tuniform float maxblur;\n\t\t//clamp value of max blur (0.0 = no blur, 1.0 default)\n\n\t\tuniform float threshold; // highlight threshold;\n\t\tuniform float gain; // highlight gain;\n\n\t\tuniform float bias; // bokeh edge bias\n\t\tuniform float fringe; // bokeh chromatic aberration / fringing\n\n\t\tuniform bool noise; //use noise instead of pattern for sample dithering\n\n\t\tuniform float dithering;\n\n\t\tuniform bool depthblur; // blur the depth buffer\n\t\tfloat dbsize = 1.25; // depth blur size\n\n\t\t/*\n\t\tnext part is experimental\n\t\tnot looking good with small sample and ring count\n\t\tlooks okay starting from samples = 4, rings = 4\n\t\t*/\n\n\t\tuniform bool pentagon; //use pentagon as bokeh shape?\n\t\tfloat feather = 0.4; //pentagon shape feather\n\n\t\t//------------------------------------------\n\n\t\tfloat penta(vec2 coords) {\n\t\t\t//pentagonal shape\n\t\t\tfloat scale = float(rings) - 1.3;\n\t\t\tvec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);\n\t\t\tvec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);\n\t\t\tvec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);\n\t\t\tvec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);\n\t\t\tvec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);\n\t\t\tvec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);\n\n\t\t\tvec4  one = vec4( 1.0 );\n\n\t\t\tvec4 P = vec4((coords),vec2(scale, scale));\n\n\t\t\tvec4 dist = vec4(0.0);\n\t\t\tfloat inorout = -4.0;\n\n\t\t\tdist.x = dot( P, HS0 );\n\t\t\tdist.y = dot( P, HS1 );\n\t\t\tdist.z = dot( P, HS2 );\n\t\t\tdist.w = dot( P, HS3 );\n\n\t\t\tdist = smoothstep( -feather, feather, dist );\n\n\t\t\tinorout += dot( dist, one );\n\n\t\t\tdist.x = dot( P, HS4 );\n\t\t\tdist.y = HS5.w - abs( P.z );\n\n\t\t\tdist = smoothstep( -feather, feather, dist );\n\t\t\tinorout += dist.x;\n\n\t\t\treturn clamp( inorout, 0.0, 1.0 );\n\t\t}\n\n\t\tfloat bdepth(vec2 coords) {\n\t\t\t// Depth buffer blur\n\t\t\tfloat d = 0.0;\n\t\t\tfloat kernel[9];\n\t\t\tvec2 offset[9];\n\n\t\t\tvec2 wh = vec2(1.0/textureWidth,1.0/textureHeight) * dbsize;\n\n\t\t\toffset[0] = vec2(-wh.x,-wh.y);\n\t\t\toffset[1] = vec2( 0.0, -wh.y);\n\t\t\toffset[2] = vec2( wh.x -wh.y);\n\n\t\t\toffset[3] = vec2(-wh.x,  0.0);\n\t\t\toffset[4] = vec2( 0.0,   0.0);\n\t\t\toffset[5] = vec2( wh.x,  0.0);\n\n\t\t\toffset[6] = vec2(-wh.x, wh.y);\n\t\t\toffset[7] = vec2( 0.0,  wh.y);\n\t\t\toffset[8] = vec2( wh.x, wh.y);\n\n\t\t\tkernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;\n\t\t\tkernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;\n\t\t\tkernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;\n\n\n\t\t\tfor( int i=0; i<9; i++ ) {\n\t\t\t\tfloat tmp = texture2D(tDepth, coords + offset[i]).r;\n\t\t\t\td += tmp * kernel[i];\n\t\t\t}\n\n\t\t\treturn d;\n\t\t}\n\n\n\t\tvec3 color(vec2 coords,float blur) {\n\t\t\t//processing the sample\n\n\t\t\tvec3 col = vec3(0.0);\n\t\t\tvec2 texel = vec2(1.0/textureWidth,1.0/textureHeight);\n\n\t\t\tcol.r = texture2D(tColor,coords + vec2(0.0,1.0)*texel*fringe*blur).r;\n\t\t\tcol.g = texture2D(tColor,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;\n\t\t\tcol.b = texture2D(tColor,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;\n\n\t\t\tvec3 lumcoeff = vec3(0.299,0.587,0.114);\n\t\t\tfloat lum = dot(col.rgb, lumcoeff);\n\t\t\tfloat thresh = max((lum-threshold)*gain, 0.0);\n\t\t\treturn col+mix(vec3(0.0),col,thresh*blur);\n\t\t}\n\n\t\tvec3 debugFocus(vec3 col, float blur, float depth) {\n\t\t\tfloat edge = 0.002*depth; //distance based edge smoothing\n\t\t\tfloat m = clamp(smoothstep(0.0,edge,blur),0.0,1.0);\n\t\t\tfloat e = clamp(smoothstep(1.0-edge,1.0,blur),0.0,1.0);\n\n\t\t\tcol = mix(col,vec3(1.0,0.5,0.0),(1.0-m)*0.6);\n\t\t\tcol = mix(col,vec3(0.0,0.5,1.0),((1.0-e)-(1.0-m))*0.2);\n\n\t\t\treturn col;\n\t\t}\n\n\t\tfloat linearize(float depth) {\n\t\t\treturn -zfar * znear / (depth * (zfar - znear) - zfar);\n\t\t}\n\n\t\tfloat vignette() {\n\t\t\tfloat dist = distance(vUv.xy, vec2(0.5,0.5));\n\t\t\tdist = smoothstep(vignout+(fstop/vignfade), vignin+(fstop/vignfade), dist);\n\t\t\treturn clamp(dist,0.0,1.0);\n\t\t}\n\n\t\tfloat gather(float i, float j, int ringsamples, inout vec3 col, float w, float h, float blur) {\n\t\t\tfloat rings2 = float(rings);\n\t\t\tfloat step = PI*2.0 / float(ringsamples);\n\t\t\tfloat pw = cos(j*step)*i;\n\t\t\tfloat ph = sin(j*step)*i;\n\t\t\tfloat p = 1.0;\n\t\t\tif (pentagon) {\n\t\t\t\tp = penta(vec2(pw,ph));\n\t\t\t}\n\t\t\tcol += color(vUv.xy + vec2(pw*w,ph*h), blur) * mix(1.0, i/rings2, bias) * p;\n\t\t\treturn 1.0 * mix(1.0, i /rings2, bias) * p;\n\t\t}\n\n\t\tvoid main() {\n\t\t\t//scene depth calculation\n\n\t\t\tfloat depth = linearize(texture2D(tDepth,vUv.xy).x);\n\n\t\t\t// Blur depth?\n\t\t\tif ( depthblur ) {\n\t\t\t\tdepth = linearize(bdepth(vUv.xy));\n\t\t\t}\n\n\t\t\t//focal plane calculation\n\n\t\t\tfloat fDepth = focalDepth;\n\n\t\t\tif (shaderFocus) {\n\n\t\t\t\tfDepth = linearize(texture2D(tDepth,focusCoords).x);\n\n\t\t\t}\n\n\t\t\t// dof blur factor calculation\n\n\t\t\tfloat blur = 0.0;\n\n\t\t\tif (manualdof) {\n\t\t\t\tfloat a = depth-fDepth; // Focal plane\n\t\t\t\tfloat b = (a-fdofstart)/fdofdist; // Far DoF\n\t\t\t\tfloat c = (-a-ndofstart)/ndofdist; // Near Dof\n\t\t\t\tblur = (a>0.0) ? b : c;\n\t\t\t} else {\n\t\t\t\tfloat f = focalLength; // focal length in mm\n\t\t\t\tfloat d = fDepth*1000.0; // focal plane in mm\n\t\t\t\tfloat o = depth*1000.0; // depth in mm\n\n\t\t\t\tfloat a = (o*f)/(o-f);\n\t\t\t\tfloat b = (d*f)/(d-f);\n\t\t\t\tfloat c = (d-f)/(d*fstop*CoC);\n\n\t\t\t\tblur = abs(a-b)*c;\n\t\t\t}\n\n\t\t\tblur = clamp(blur,0.0,1.0);\n\n\t\t\t// calculation of pattern for dithering\n\n\t\t\tvec2 noise = vec2(rand(vUv.xy), rand( vUv.xy + vec2( 0.4, 0.6 ) ) )*dithering*blur;\n\n\t\t\t// getting blur x and y step factor\n\n\t\t\tfloat w = (1.0/textureWidth)*blur*maxblur+noise.x;\n\t\t\tfloat h = (1.0/textureHeight)*blur*maxblur+noise.y;\n\n\t\t\t// calculation of final color\n\n\t\t\tvec3 col = vec3(0.0);\n\n\t\t\tif(blur < 0.05) {\n\t\t\t\t//some optimization thingy\n\t\t\t\tcol = texture2D(tColor, vUv.xy).rgb;\n\t\t\t} else {\n\t\t\t\tcol = texture2D(tColor, vUv.xy).rgb;\n\t\t\t\tfloat s = 1.0;\n\t\t\t\tint ringsamples;\n\n\t\t\t\tfor (int i = 1; i <= rings; i++) {\n\t\t\t\t\t/*unboxstart*/\n\t\t\t\t\tringsamples = i * samples;\n\n\t\t\t\t\tfor (int j = 0 ; j < maxringsamples ; j++) {\n\t\t\t\t\t\tif (j >= ringsamples) break;\n\t\t\t\t\t\ts += gather(float(i), float(j), ringsamples, col, w, h, blur);\n\t\t\t\t\t}\n\t\t\t\t\t/*unboxend*/\n\t\t\t\t}\n\n\t\t\t\tcol /= s; //divide by sample count\n\t\t\t}\n\n\t\t\tif (showFocus) {\n\t\t\t\tcol = debugFocus(col, blur, depth);\n\t\t\t}\n\n\t\t\tif (vignetting) {\n\t\t\t\tcol *= vignette();\n\t\t\t}\n\n\t\t\tgl_FragColor.rgb = col;\n\t\t\tgl_FragColor.a = 1.0;\n\t\t}`\n\n};\n\nconst BokehDepthShader = {\n\n\tuniforms: {\n\n\t\t'mNear': { value: 1.0 },\n\t\t'mFar': { value: 1000.0 },\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying float vViewZDepth;\n\n\t\tvoid main() {\n\n\t\t\t#include <begin_vertex>\n\t\t\t#include <project_vertex>\n\n\t\t\tvViewZDepth = - mvPosition.z;\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float mNear;\n\t\tuniform float mFar;\n\n\t\tvarying float vViewZDepth;\n\n\t\tvoid main() {\n\n\t\t\tfloat color = 1.0 - smoothstep( mNear, mFar, vViewZDepth );\n\t\t\tgl_FragColor = vec4( vec3( color ), 1.0 );\n\n\t\t}`\n\n};\n\nexport { BokehShader, BokehDepthShader };\n","import {\n\tMesh,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPlaneGeometry,\n\tScene,\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from 'three';\n\nimport { BokehShader } from '../shaders/BokehShader2.js';\nimport { BokehDepthShader } from '../shaders/BokehShader2.js';\n\nclass CinematicCamera extends PerspectiveCamera {\n\n\tconstructor( fov, aspect, near, far ) {\n\n\t\tsuper( fov, aspect, near, far );\n\n\t\tthis.type = 'CinematicCamera';\n\n\t\tthis.postprocessing = { enabled: true };\n\t\tthis.shaderSettings = {\n\t\t\trings: 3,\n\t\t\tsamples: 4\n\t\t};\n\n\t\tconst depthShader = BokehDepthShader;\n\n\t\tthis.materialDepth = new ShaderMaterial( {\n\t\t\tuniforms: depthShader.uniforms,\n\t\t\tvertexShader: depthShader.vertexShader,\n\t\t\tfragmentShader: depthShader.fragmentShader\n\t\t} );\n\n\t\tthis.materialDepth.uniforms[ 'mNear' ].value = near;\n\t\tthis.materialDepth.uniforms[ 'mFar' ].value = far;\n\n\t\t// In case of cinematicCamera, having a default lens set is important\n\t\tthis.setLens();\n\n\t\tthis.initPostProcessing();\n\n\t}\n\n\t// providing fnumber and coc(Circle of Confusion) as extra arguments\n\t// In case of cinematicCamera, having a default lens set is important\n\t// if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n\tsetLens( focalLength = 35, filmGauge = 35, fNumber = 8, coc = 0.019 ) {\n\n\t\tthis.filmGauge = filmGauge;\n\n\t\tthis.setFocalLength( focalLength );\n\n\t\tthis.fNumber = fNumber;\n\t\tthis.coc = coc;\n\n\t\t// fNumber is focalLength by aperture\n\t\tthis.aperture = focalLength / this.fNumber;\n\n\t\t// hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n\t\tthis.hyperFocal = ( focalLength * focalLength ) / ( this.aperture * this.coc );\n\n\t}\n\n\tlinearize( depth ) {\n\n\t\tconst zfar = this.far;\n\t\tconst znear = this.near;\n\t\treturn - zfar * znear / ( depth * ( zfar - znear ) - zfar );\n\n\t}\n\n\tsmoothstep( near, far, depth ) {\n\n\t\tconst x = this.saturate( ( depth - near ) / ( far - near ) );\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t}\n\n\tsaturate( x ) {\n\n\t\treturn Math.max( 0, Math.min( 1, x ) );\n\n\t}\n\n\t// function for focusing at a distance from the camera\n\tfocusAt( focusDistance = 20 ) {\n\n\t\tconst focalLength = this.getFocalLength();\n\n\t\t// distance from the camera (normal to frustrum) to focus on\n\t\tthis.focus = focusDistance;\n\n\t\t// the nearest point from the camera which is in focus (unused)\n\t\tthis.nearPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal + ( this.focus - focalLength ) );\n\n\t\t// the farthest point from the camera which is in focus (unused)\n\t\tthis.farPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal - ( this.focus - focalLength ) );\n\n\t\t// the gap or width of the space in which is everything is in focus (unused)\n\t\tthis.depthOfField = this.farPoint - this.nearPoint;\n\n\t\t// Considering minimum distance of focus for a standard lens (unused)\n\t\tif ( this.depthOfField < 0 ) this.depthOfField = 0;\n\n\t\tthis.sdistance = this.smoothstep( this.near, this.far, this.focus );\n\n\t\tthis.ldistance = this.linearize( 1 -\tthis.sdistance );\n\n\t\tthis.postprocessing.bokeh_uniforms[ 'focalDepth' ].value = this.ldistance;\n\n\t}\n\n\tinitPostProcessing() {\n\n\t\tif ( this.postprocessing.enabled ) {\n\n\t\t\tthis.postprocessing.scene = new Scene();\n\n\t\t\tthis.postprocessing.camera = new OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2,\twindow.innerHeight / 2, window.innerHeight / - 2, - 10000, 10000 );\n\n\t\t\tthis.postprocessing.scene.add( this.postprocessing.camera );\n\n\t\t\tthis.postprocessing.rtTextureDepth = new WebGLRenderTarget( window.innerWidth, window.innerHeight );\n\t\t\tthis.postprocessing.rtTextureColor = new WebGLRenderTarget( window.innerWidth, window.innerHeight );\n\n\t\t\tconst bokeh_shader = BokehShader;\n\n\t\t\tthis.postprocessing.bokeh_uniforms = UniformsUtils.clone( bokeh_shader.uniforms );\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'tColor' ].value = this.postprocessing.rtTextureColor.texture;\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'tDepth' ].value = this.postprocessing.rtTextureDepth.texture;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'manualdof' ].value = 0;\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'shaderFocus' ].value = 0;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'fstop' ].value = 2.8;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'showFocus' ].value = 1;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'focalDepth' ].value = 0.1;\n\n\t\t\t//console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'znear' ].value = this.near;\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'zfar' ].value = this.near;\n\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'textureWidth' ].value = window.innerWidth;\n\n\t\t\tthis.postprocessing.bokeh_uniforms[ 'textureHeight' ].value = window.innerHeight;\n\n\t\t\tthis.postprocessing.materialBokeh = new ShaderMaterial( {\n\t\t\t\tuniforms: this.postprocessing.bokeh_uniforms,\n\t\t\t\tvertexShader: bokeh_shader.vertexShader,\n\t\t\t\tfragmentShader: bokeh_shader.fragmentShader,\n\t\t\t\tdefines: {\n\t\t\t\t\tRINGS: this.shaderSettings.rings,\n\t\t\t\t\tSAMPLES: this.shaderSettings.samples,\n\t\t\t\t\tDEPTH_PACKING: 1\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.postprocessing.quad = new Mesh( new PlaneGeometry( window.innerWidth, window.innerHeight ), this.postprocessing.materialBokeh );\n\t\t\tthis.postprocessing.quad.position.z = - 500;\n\t\t\tthis.postprocessing.scene.add( this.postprocessing.quad );\n\n\t\t}\n\n\t}\n\n\trenderCinematic( scene, renderer ) {\n\n\t\tif ( this.postprocessing.enabled ) {\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\trenderer.clear();\n\n\t\t\t// Render scene into texture\n\n\t\t\tscene.overrideMaterial = null;\n\t\t\trenderer.setRenderTarget( this.postprocessing.rtTextureColor );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, this );\n\n\t\t\t// Render depth into texture\n\n\t\t\tscene.overrideMaterial = this.materialDepth;\n\t\t\trenderer.setRenderTarget( this.postprocessing.rtTextureDepth );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, this );\n\n\t\t\t// Render bokeh composite\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\trenderer.render( this.postprocessing.scene, this.postprocessing.camera );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t}\n\n\t}\n\n}\n\nexport { CinematicCamera };\n","import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useHelper(object3D, helperConstructor, ...args) {\n  const helper = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useEffect(() => {\n    if (object3D) {\n      if (helperConstructor && object3D != null && object3D.current) {\n        helper.current = new helperConstructor(object3D.current, ...args);\n\n        if (helper.current) {\n          scene.add(helper.current);\n        }\n      }\n    }\n    /**\n     * Dispose of the helper if no object 3D is passed\n     */\n\n\n    if (!object3D && helper.current) {\n      scene.remove(helper.current);\n    }\n\n    return () => {\n      if (helper.current) {\n        scene.remove(helper.current);\n      }\n    };\n  }, [scene, helperConstructor, object3D, args]);\n  useFrame(() => {\n    var _helper$current;\n\n    if ((_helper$current = helper.current) != null && _helper$current.update) {\n      helper.current.update();\n    }\n  });\n  return helper;\n}\n\nexport { useHelper };\n"],"names":["aspect_ratio","window","innerWidth","innerHeight","camera","BokehShader","uniforms","value","Vector2","vertexShader","fragmentShader","BokehDepthShader","CinematicCamera","fov","aspect","near","far","type","postprocessing","enabled","shaderSettings","rings","samples","depthShader","materialDepth","ShaderMaterial","setLens","initPostProcessing","focalLength","filmGauge","fNumber","coc","this","setFocalLength","aperture","hyperFocal","depth","zfar","znear","x","saturate","Math","max","min","focusDistance","getFocalLength","focus","nearPoint","farPoint","depthOfField","sdistance","smoothstep","ldistance","linearize","bokeh_uniforms","scene","Scene","OrthographicCamera","add","rtTextureDepth","WebGLRenderTarget","rtTextureColor","bokeh_shader","UniformsUtils","texture","materialBokeh","defines","RINGS","SAMPLES","DEPTH_PACKING","quad","Mesh","PlaneGeometry","position","z","renderer","currentRenderTarget","getRenderTarget","clear","overrideMaterial","setRenderTarget","render","PerspectiveCamera","theta","Camera","cameraObj","set","useRef","useThree","gl","useHelper","CameraHelper","useEffect","current","createControls","useFrame","sin","MathUtils","y","cos","lookAt","updateMatrixWorld","renderCinematic","object","ref","Array","map","_","i","random","args","color","effectController","fstop","showFocus","focalDepth","matChanger","e","frameHeight","gui","GUI","onChange","manual","attach","object3D","helperConstructor","helper","React","state","remove","_helper$current","update"],"sourceRoot":""}