{"version":3,"file":"static/js/171.b83761ea.chunk.js","mappings":"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","sources":["contants.tsx","webgl/clipping/Example.tsx"],"sourcesContent":["export const canvas_width = window.innerWidth > 640 ? (window.innerWidth - 300) : window.innerWidth\nexport const canvas_height = window.innerWidth > 640 ? window.innerHeight : (window.innerHeight - 48)\n\nexport const aspect_ratio = canvas_width / canvas_height","import { useEffect, useRef } from 'react'\nimport { DoubleSide, MeshPhongMaterial, Plane, Vector3 } from 'three'\nimport { GUI } from \"three/examples/jsm/libs/lil-gui.module.min\"\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\n\nimport { aspect_ratio } from '../../contants'\n\nlet startTime: number\nlet renderer: any\nlet material: any\nconst Empty: any = Object.freeze([])\nconst localPlane = new Plane(new Vector3(0, - 1, 0 ), 0.8)\nconst globalPlane = new Plane(new Vector3(- 1, 0, 0 ), 0.1)\nconst globalPlanes = [globalPlane]\n\nconst Mesh = () => {\n  const { gl } = useThree()\n  renderer = gl\n\n  const meshRef: any = useRef()\n  material = new MeshPhongMaterial({\n    color: 0x80ee10,\n    shininess: 100,\n    side: DoubleSide,\n\n    // ***** Clipping setup (material): *****\n    clippingPlanes: [localPlane],\n    clipShadows: true\n  })\n\n\trenderer.clippingPlanes = Empty // GUI sets it to globalPlanes\n\trenderer.localClippingEnabled = true\n\n  useFrame(() => {\n    const currentTime = Date.now()\n    const time = (currentTime - startTime ) / 1000\n\n    meshRef.current.position.y = 0.8\n    meshRef.current.rotation.x = time * 0.5\n    meshRef.current.rotation.y = time * 0.2\n    meshRef.current.scale.setScalar(Math.cos(time) * 0.125 + 0.875)\n  })\n\n  return (\n    <>    \n      <mesh castShadow ref={meshRef} material={material}>\n        <torusKnotGeometry args={[0.4, 0.08, 95, 20]} />\n      </mesh>\n      <GUIControls />\n    </> \n  )\n}\n\nconst Ground = () => {\n  return (\n    <mesh rotation={[-Math.PI / 2, 0, 0]} receiveShadow >\n      <planeGeometry args={[9, 9, 1, 1]} />\n      <meshPhongMaterial color={0xa0adaf} shininess={150} />\n    </mesh>\n  )\n}\n\nconst GUIControls = () => {\n  const gui = new GUI(),\n  folderLocal = gui.addFolder('Local Clipping'),\n  propsLocal = {\n    get 'Enabled'() {\n      return renderer.localClippingEnabled\n    },\n    set 'Enabled'(v) {\n      renderer.localClippingEnabled = v\n    },\n    get 'Shadows'() {\n      return material.clipShadows\n    },\n    set 'Shadows'(v) {\n      material.clipShadows = v\n    },\n    get 'Plane'() {\n      return localPlane.constant\n    },\n    set 'Plane'(v) {\n      localPlane.constant = v\n    }\n  },\n\n  folderGlobal = gui.addFolder('Global Clipping'),\n  propsGlobal = {\n    get 'Enabled'() {\n      return renderer.clippingPlanes !== Empty\n    },\n    set 'Enabled'(v) {\n      renderer.clippingPlanes = v ? globalPlanes : Empty\n    },\n    get 'Plane'() {\n      return globalPlane.constant\n    },\n    set 'Plane'(v) {\n      globalPlane.constant = v\n    }\n  }\n\n  folderLocal.add(propsLocal, 'Enabled')\n  folderLocal.add(propsLocal, 'Shadows')\n  folderLocal.add(propsLocal, 'Plane', 0.3, 1.25)\n\n  folderGlobal.add(propsGlobal, 'Enabled')\n  folderGlobal.add(propsGlobal, 'Plane', -0.4, 3)\n\n  return null\n}\n\nconst Example = () => {\n  useEffect(() => {\n    startTime = Date.now()\n  }, [])\n\n  return (\n    <Canvas camera={{position: [0, 1.3, 3], fov: 36, aspect: aspect_ratio, near: 0.26, far: 16}} shadows>\n      <color attach='background' args={['black']} />\n      <ambientLight args={[0x505050]} />\n      <spotLight color={0xffffff} angle={Math.PI / 5} penumbra={0.2} \n        position={[2, 3, 3]} castShadow \n        shadow-camera-near={3} shadow-camera-far={10}\n        shadow-mapSize-width={1024} shadow-mapSize-height={1024} />\n      <directionalLight args={[0x55505a, 1]} position={[0, 3, 0]} castShadow \n        shadow-camera-near={1} shadow-camera-far={10}\n        shadow-camera-top={1} shadow-camera-bottom={-1}\n        shadow-camera-right={1} shadow-camera-left={-1} \n        shadow-mapSize-width={1024} shadow-mapSize-height={1024} />\n      <Mesh />\n      <Ground />\n      <OrbitControls target={[0, 1, 0]} />\n    </Canvas>\n  )\n}\n\nexport default Example"],"names":["canvas_width","window","innerWidth","canvas_height","innerHeight","aspect_ratio","startTime","renderer","material","Empty","Object","freeze","localPlane","Plane","Vector3","globalPlane","globalPlanes","Mesh","gl","useThree","meshRef","useRef","MeshPhongMaterial","color","shininess","side","DoubleSide","clippingPlanes","clipShadows","localClippingEnabled","useFrame","time","Date","now","current","position","y","rotation","x","scale","setScalar","Math","cos","castShadow","ref","args","GUIControls","Ground","PI","receiveShadow","gui","GUI","folderLocal","addFolder","propsLocal","v","constant","folderGlobal","propsGlobal","add","useEffect","camera","fov","aspect","near","far","shadows","attach","angle","penumbra","target"],"sourceRoot":""}